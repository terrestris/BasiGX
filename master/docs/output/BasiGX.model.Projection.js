Ext.data.JsonP.BasiGX_model_Projection({"tagname":"class","name":"BasiGX.model.Projection","autodetected":{"aliases":true,"alternateClassNames":true,"extends":true,"mixins":true,"requires":true,"uses":true,"members":true,"code_type":true},"files":[{"filename":"Projection.js","href":"Projection2.html#BasiGX-model-Projection"}],"aliases":{},"alternateClassNames":[],"extends":"Ext.data.Model","mixins":[],"requires":[],"uses":[],"members":[{"name":"fields","tagname":"property","owner":"BasiGX.model.Projection","id":"property-fields","meta":{"private":true}},{"name":"idProperty","tagname":"property","owner":"BasiGX.model.Projection","id":"property-idProperty","meta":{"private":true}}],"code_type":"ext_define","id":"class-BasiGX.model.Projection","component":false,"superclasses":["Ext.data.Model"],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>Ext.data.Model<div class='subclass '><strong>BasiGX.model.Projection</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/Projection2.html#BasiGX-model-Projection' target='_blank'>Projection.js</a></div></pre><div class='doc-contents'><p>Projection model for use with the Projections Store</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-fields' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='BasiGX.model.Projection'>BasiGX.model.Projection</span><br/><a href='source/Projection2.html#BasiGX-model-Projection-property-fields' target='_blank' class='view-source'>view source</a></div><a href='#!/api/BasiGX.model.Projection-property-fields' class='name expandable'>fields</a> : Array<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>[{name: &#39;code&#39;, type: &#39;int&#39;}, {name: &#39;accuracy&#39;, type: &#39;string&#39;}, {name: &#39;area&#39;, type: &#39;string&#39;}, {name: &#39;authority&#39;, type: &#39;string&#39;}, {name: &#39;bbox&#39;, type: &#39;auto&#39;}, {name: &#39;default_trans&#39;, type: &#39;number&#39;}, {name: &#39;kind&#39;, type: &#39;string&#39;}, {name: &#39;name&#39;, type: &#39;string&#39;}, {name: &#39;proj4&#39;, type: &#39;string&#39;}, {name: &#39;trans&#39;, type: &#39;auto&#39;}, {name: &#39;unit&#39;, type: &#39;string&#39;}, {name: &#39;wkt&#39;, type: &#39;string&#39;}]</code></p></div></div></div><div id='property-idProperty' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='BasiGX.model.Projection'>BasiGX.model.Projection</span><br/><a href='source/Projection2.html#BasiGX-model-Projection-property-idProperty' target='_blank' class='view-source'>view source</a></div><a href='#!/api/BasiGX.model.Projection-property-idProperty' class='name expandable'>idProperty</a> : String<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&#39;code&#39;</code></p></div></div></div></div></div></div></div>","meta":{}});